From 58990479f2c71b71dc4b72cedd01dde14cb27936 Mon Sep 17 00:00:00 2001
From: kirilllykov <lykov.kirill@gmail.com>
Date: Tue, 18 Feb 2014 14:51:41 +0100
Subject: [PATCH] Changes for building on mac os 10.7.5 with macport

---
 CMake/FindGLEW.cmake       |  6 +++---
 CMake/FindGLFW.cmake       |  6 +++---
 CMake/FindOpenVdb.cmake    | 10 +++++-----
 CMake/FindTbb.cmake        | 18 +++++++++---------
 CMakeLists.txt             |  6 ++++--
 src/GCommon/GCommonFwd.h   |  4 ++++
 src/GCommon/RollingMean.h  |  1 +
 src/GCommon/VectorHelper.h |  2 +-
 8 files changed, 30 insertions(+), 23 deletions(-)

diff --git a/CMake/FindGLEW.cmake b/CMake/FindGLEW.cmake
index 2988eb4..c9b396f 100644
--- a/CMake/FindGLEW.cmake
+++ b/CMake/FindGLEW.cmake
@@ -4,7 +4,7 @@
 #  GLEW_INCLUDE_DIR, where to find headers
 
 
-set(GLEW_DIR $ENV{GLEW_HOME})
+set(GLEW_DIR /opt/local/)
 
 
 FIND_PATH(GLEW_INCLUDE_DIR GL/glew.h
@@ -13,13 +13,13 @@ FIND_PATH(GLEW_INCLUDE_DIR GL/glew.h
 )
 
 find_library(GLEW_LIBRARY
-  NAMES glew32s
+  NAMES GLEW
   PATHS
   ${GLEW_DIR}/lib
 )
 
 find_library(GLEW_MX_LIBRARY
-  NAMES glew32mxs.lib
+  NAMES GLEWmx
   PATHS
   ${GLEW_DIR}/lib
 )
diff --git a/CMake/FindGLFW.cmake b/CMake/FindGLFW.cmake
index 7409beb..99022df 100644
--- a/CMake/FindGLFW.cmake
+++ b/CMake/FindGLFW.cmake
@@ -4,16 +4,16 @@
 #  GLFW_INCLUDE_DIR, where to find headers
 
 
-set(GLFW_DIR $ENV{GLFW_HOME})
+set(GLFW_DIR /opt/local/)
 
 
-FIND_PATH(GLFW_INCLUDE_DIR GL/glfw3.h
+FIND_PATH(GLFW_INCLUDE_DIR GLFW/glfw3.h
   PATHS
   ${GLFW_DIR}/include
 )
 
 find_library(GLFW_LIBRARIES
-  NAMES GLFW3
+  NAMES glfw
   PATHS
   ${GLFW_DIR}/lib
 )
diff --git a/CMake/FindOpenVdb.cmake b/CMake/FindOpenVdb.cmake
index 0b524f3..c38674c 100644
--- a/CMake/FindOpenVdb.cmake
+++ b/CMake/FindOpenVdb.cmake
@@ -4,7 +4,7 @@
 #  OpenVdb_INCLUDE_DIRS, where to find headers
 
 
-set(OpenVdb_DIR $ENV{OPEN_VDB_HOME})
+set(OpenVdb_DIR /Users/kirill/bin/openvdb/)
 
 
 FIND_PATH(OpenVdb_INCLUDE_DIRS openvdb/openvdb.h
@@ -13,16 +13,16 @@ FIND_PATH(OpenVdb_INCLUDE_DIRS openvdb/openvdb.h
 )
 
 find_library(OpenVdb_LIBRARY_RELEASE
-  NAMES libopenvdb.lib
+  NAMES openvdb
   PATHS
-  ${OpenVdb_DIR}/lib/Release
+  ${OpenVdb_DIR}/lib/
   ${OpenVdb_DIR}/lib
 )
 
 find_library(OpenVdb_LIBRARY_DEBUG
-  NAMES libopenvdbd.lib
+  NAMES openvdb
   PATHS
-  ${OpenVdb_DIR}/lib/Debug
+  ${OpenVdb_DIR}/lib/
   ${OpenVdb_DIR}/lib
 )
 
diff --git a/CMake/FindTbb.cmake b/CMake/FindTbb.cmake
index 95f4c2f..c95c256 100644
--- a/CMake/FindTbb.cmake
+++ b/CMake/FindTbb.cmake
@@ -242,30 +242,30 @@ mark_as_advanced(TBB_LIBRARY TBB_MALLOC_LIBRARY)
 
 #-- Look for debug libraries
 # Jiri: Changed the same way as for the release libraries.
-find_library(TBB_LIBRARY_DEBUG ${_TBB_LIB_DEBUG_NAME} HINTS ${_TBB_LIBRARY_DIR}
-        PATHS ENV LIBRARY_PATH ENV LD_LIBRARY_PATH)
-find_library(TBB_MALLOC_LIBRARY_DEBUG ${_TBB_LIB_MALLOC_DEBUG_NAME} HINTS ${_TBB_LIBRARY_DIR}
-        PATHS ENV LIBRARY_PATH ENV LD_LIBRARY_PATH)
+#find_library(TBB_LIBRARY_DEBUG ${_TBB_LIB_DEBUG_NAME} HINTS ${_TBB_LIBRARY_DIR}
+#        PATHS ENV LIBRARY_PATH ENV LD_LIBRARY_PATH)
+#find_library(TBB_MALLOC_LIBRARY_DEBUG ${_TBB_LIB_MALLOC_DEBUG_NAME} HINTS ${_TBB_LIBRARY_DIR}
+#        PATHS ENV LIBRARY_PATH ENV LD_LIBRARY_PATH)
 
 # Jiri: Self-built TBB stores the debug libraries in a separate directory.
 #       Extract path from TBB_LIBRARY_DEBUG name
-get_filename_component(TBB_LIBRARY_DEBUG_DIR ${TBB_LIBRARY_DEBUG} PATH)
+#get_filename_component(TBB_LIBRARY_DEBUG_DIR ${TBB_LIBRARY_DEBUG} PATH)
 
 #TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)
 #TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)
-mark_as_advanced(TBB_LIBRARY_DEBUG TBB_MALLOC_LIBRARY_DEBUG)
+#mark_as_advanced(TBB_LIBRARY_DEBUG TBB_MALLOC_LIBRARY_DEBUG)
 
 
 if (TBB_INCLUDE_DIR)
     if (TBB_LIBRARY)
         set (TBB_FOUND "YES")
         set (TBB_LIBRARIES ${TBB_LIBRARY} ${TBB_MALLOC_LIBRARY} ${TBB_LIBRARIES})
-        set (TBB_DEBUG_LIBRARIES ${TBB_LIBRARY_DEBUG} ${TBB_MALLOC_LIBRARY_DEBUG} ${TBB_DEBUG_LIBRARIES})
+        #set (TBB_DEBUG_LIBRARIES ${TBB_LIBRARY_DEBUG} ${TBB_MALLOC_LIBRARY_DEBUG} ${TBB_DEBUG_LIBRARIES})
         set (TBB_INCLUDE_DIRS ${TBB_INCLUDE_DIR} CACHE PATH "TBB include directory" FORCE)
         set (TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIR} CACHE PATH "TBB library directory" FORCE)
         # Jiri: Self-built TBB stores the debug libraries in a separate directory.
-        set (TBB_DEBUG_LIBRARY_DIRS ${TBB_LIBRARY_DEBUG_DIR} CACHE PATH "TBB debug library directory" FORCE)
-        mark_as_advanced(TBB_INCLUDE_DIRS TBB_LIBRARY_DIRS TBB_DEBUG_LIBRARY_DIRS TBB_LIBRARIES TBB_DEBUG_LIBRARIES)
+        #set (TBB_DEBUG_LIBRARY_DIRS ${TBB_LIBRARY_DEBUG_DIR} CACHE PATH "TBB debug library directory" FORCE)
+        #mark_as_advanced(TBB_INCLUDE_DIRS TBB_LIBRARY_DIRS TBB_DEBUG_LIBRARY_DIRS TBB_LIBRARIES TBB_DEBUG_LIBRARIES)
         message(STATUS "Found Intel TBB")
     endif (TBB_LIBRARY)
 endif (TBB_INCLUDE_DIR)
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 76efdb2..3a0419a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,6 +3,9 @@ project(Graphtane)
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/CMake/")
 
+set (CMAKE_CXX_COMPILER "g++")
+set (CMAKE_CXX_FLAGS "-std=c++0x")
+
 OPTION(BUILD_Graphtane_STATIC "Build Static Libraries" 0)
 if(BUILD_Graphtane_STATIC)
 	set(Graphtane_LIB_TYPE "STATIC")
@@ -16,11 +19,10 @@ set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
 set(CMAKE_DEBUG_POSTFIX d)
 link_directories(${CMAKE_BINARY_DIR}/lib)
 
-find_package(Boost COMPONENTS thread REQUIRED)
+find_package(Boost COMPONENTS thread system-mt filesystem-mt REQUIRED)
 include_directories(${Boost_INCLUDE_DIRS})
 link_directories(${Boost_LIBRARY_DIRS})
 
-
 add_subdirectory(src/GAppFramework)
 add_subdirectory(src/GCommon)
 add_subdirectory(src/GSparseVolumes)
diff --git a/src/GCommon/GCommonFwd.h b/src/GCommon/GCommonFwd.h
index a938205..a099874 100644
--- a/src/GCommon/GCommonFwd.h
+++ b/src/GCommon/GCommonFwd.h
@@ -24,7 +24,11 @@
 
 namespace GCommon {
 
+#ifdef __GNUC__
+using std::shared_ptr;
+#elif _MSC_VER
 using std::tr1::shared_ptr;
+#endif
 
 class FileFinder;
 class Listener;
diff --git a/src/GCommon/RollingMean.h b/src/GCommon/RollingMean.h
index cd009d5..852b122 100644
--- a/src/GCommon/RollingMean.h
+++ b/src/GCommon/RollingMean.h
@@ -21,6 +21,7 @@
 #pragma once
 
 #include <deque>
+#include <cstddef>
 
 namespace GCommon {
 
diff --git a/src/GCommon/VectorHelper.h b/src/GCommon/VectorHelper.h
index 43fecd8..709802a 100644
--- a/src/GCommon/VectorHelper.h
+++ b/src/GCommon/VectorHelper.h
@@ -28,7 +28,7 @@ namespace GCommon {
 template <typename T>
 void vectorErase(std::vector<T>& vec, const T& element)
 {
-	std::vector<T>::const_iterator i = std::find(vec.begin(), vec.end(), element);
+	typename std::vector<T>::const_iterator i = std::find(vec.begin(), vec.end(), element);
 	if (i != vec.end())
 	{
 		vec.erase(i);
-- 
1.8.5.4

